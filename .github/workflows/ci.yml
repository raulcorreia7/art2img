name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  # Linux build and test
  linux-build:
    name: Linux Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache CPM dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/CPM
            ~/AppData/Local/Temp/CPM
          key: cpm-${{ runner.os }}-linux-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cpm-${{ runner.os }}-linux-

      - name: Cache build files
        uses: actions/cache@v3
        with:
          path: |
            build/**
            !build/**/CMakeCache.txt
            !build/**/CMakeFiles/**
          key: build-${{ runner.os }}-linux-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-linux-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            clang \
            lld \
            pkg-config

      - name: Build and test Linux release configuration
        run: |
          make linux-release

  # Windows x86 build and test
  windows-x86-build:
    name: Windows x86 Build and Test
    runs-on: ubuntu-latest
    env:
      WINEDEBUG: -all
      WINEDLLOVERRIDES: mscoree,mshtml=
      WINDOWS_X86_RELEASE_DIR: build/windows-x86-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache CPM dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/CPM
            ~/AppData/Local/Temp/CPM
          key: cpm-${{ runner.os }}-win32-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cpm-${{ runner.os }}-win32-

      - name: Cache build files
        uses: actions/cache@v3
        with:
          path: |
            build/**
            !build/**/CMakeCache.txt
            !build/**/CMakeFiles/**
          key: build-${{ runner.os }}-win32-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-win32-

      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            g++-mingw-w64-i686 \
            pkg-config \
            zip \
            wine64 \
            wine32 \
            winbind \
            xvfb

      - name: Set Wine prefix path
        run: |
          echo "WINEPREFIX=${RUNNER_TEMP}/wine-prefix-x86" >> "$GITHUB_ENV"
          mkdir -p "${RUNNER_TEMP}/wine-prefix-x86"

      - name: Initialize Wine prefix
        run: |
          mkdir -p "$WINEPREFIX"
          xvfb-run -a wineboot --init

      - name: Build Windows x86 release configuration
        run: |
          make windows-x86-release

      - name: Test Windows x86 release binaries
        run: |
          xvfb-run -a ./scripts/test_windows.sh "$WINDOWS_X86_RELEASE_DIR"

  # Windows x64 build and test
  windows-x64-build:
    name: Windows x64 Build and Test
    runs-on: ubuntu-latest
    env:
      WINEDEBUG: -all
      WINEDLLOVERRIDES: mscoree,mshtml=
      WINDOWS_RELEASE_DIR: build/windows-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache CPM dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/CPM
            ~/AppData/Local/Temp/CPM
          key: cpm-${{ runner.os }}-win64-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cpm-${{ runner.os }}-win64-

      - name: Cache build files
        uses: actions/cache@v3
        with:
          path: |
            build/**
            !build/**/CMakeCache.txt
            !build/**/CMakeFiles/**
          key: build-${{ runner.os }}-win64-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-win64-

      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            g++-mingw-w64-x86-64 \
            pkg-config \
            zip \
            wine64 \
            wine32 \
            winbind \
            xvfb

      - name: Set Wine prefix path
        run: |
          echo "WINEPREFIX=${RUNNER_TEMP}/wine-prefix-x64" >> "$GITHUB_ENV"
          mkdir -p "${RUNNER_TEMP}/wine-prefix-x64"

      - name: Initialize Wine prefix
        run: |
          mkdir -p "$WINEPREFIX"
          xvfb-run -a wineboot --init

      - name: Build Windows x64 release configuration
        run: |
          make windows-release

      - name: Test Windows x64 release binaries
        run: |
          xvfb-run -a ./scripts/test_windows.sh "$WINDOWS_RELEASE_DIR"
