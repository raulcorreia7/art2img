name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  # Linux build and test
  linux-build:
    name: Linux Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache CPM dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/CPM
            ~/AppData/Local/Temp/CPM
          key: cpm-${{ runner.os }}-linux-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cpm-${{ runner.os }}-linux-

      - name: Cache build files
        uses: actions/cache@v3
        with:
          path: |
            build/**
            !build/**/CMakeCache.txt
            !build/**/CMakeFiles/**
          key: build-${{ runner.os }}-linux-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-linux-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            clang \
            lld \
            pkg-config

      - name: Build Linux release configuration
        run: |
          make linux-release

      - name: Test Linux release binaries
        run: |
          ./scripts/test_generic.sh linux build/linux-release

  # Windows x86 build and test
  windows-x86-build:
    name: Windows x86 Build and Test
    runs-on: windows-latest
    env:
      WINDOWS_X86_RELEASE_DIR: build/windows-x86-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache CPM dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/CPM
            ~/AppData/Local/Temp/CPM
          key: cpm-${{ runner.os }}-win32-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cpm-${{ runner.os }}-win32-

      - name: Cache build files
        uses: actions/cache@v3
        with:
          path: |
            build/**
            !build/**/CMakeCache.txt
            !build/**/CMakeFiles/**
          key: build-${{ runner.os }}-win32-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-win32-

      - name: Install dependencies
        shell: pwsh
        run: |
          # Install required packages for Windows build
          # Using vcpkg or other package managers if needed

      - name: Setup MinGW-w64 for Windows x86 build
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: i686
          
      - name: Install Git Bash (includes basic Unix tools)
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install git -y
          
      - name: Setup Bats for Windows
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          ./install.sh $env:GITHUB_WORKSPACE/bats
          echo "$env:GITHUB_WORKSPACE/bats/bin" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        shell: pwsh
          
      - name: Build Windows x86 release configuration
        run: |
          make windows-x86-release

      - name: Test Windows x86 release binaries
        run: |
          ./scripts/test_generic.sh windows "$WINDOWS_X86_RELEASE_DIR"

  # Windows x64 build and test
  windows-x64-build:
    name: Windows x64 Build and Test
    runs-on: windows-latest
    env:
      WINDOWS_RELEASE_DIR: build/windows-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache CPM dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/CPM
            ~/AppData/Local/Temp/CPM
          key: cpm-${{ runner.os }}-win64-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cpm-${{ runner.os }}-win64-

      - name: Cache build files
        uses: actions/cache@v3
        with:
          path: |
            build/**
            !build/**/CMakeCache.txt
            !build/**/CMakeFiles/**
          key: build-${{ runner.os }}-win64-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-win64-

      - name: Install dependencies
        shell: pwsh
        run: |
          # Install required packages for Windows build

      - name: Setup MinGW-w64 for Windows x64 build
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
          
      - name: Install Git Bash (includes basic Unix tools)
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install git -y
          
      - name: Setup Bats for Windows
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          ./install.sh $env:GITHUB_WORKSPACE/bats
          echo "$env:GITHUB_WORKSPACE/bats/bin" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        shell: pwsh
          
      - name: Build Windows x64 release configuration
        run: |
          make windows-release

      - name: Test Windows x64 release binaries
        run: |
          ./scripts/test_generic.sh windows "$WINDOWS_RELEASE_DIR"
